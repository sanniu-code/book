<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.duansanniu.mapper.TeacherMapper">


    <select id="isGuideTeacher" parameterType="map" resultType="Integer">
        select ifnull(count(*),0) from t_student_subject tss
          left join t_teacher_subject tts on tts.id = tss.subjectId
          where tss.username = #{studentusername} and tts.username = #{teacherUsername}
    </select>

    <!--保存开题要求-->
    <insert id="storeReport" parameterType="map" >
        insert into t_teacher_file(username,name,url,createTime) values(
          #{username},#{name},#{url},#{createTime}
        )
    </insert>

    <select id="getNotExamineFiles" parameterType="String" resultType="cn.duansanniu.entity.StudentUploadFile">
        select tsf.* from t_teacher_subject tts
          left join t_student_subject tss on tss.subjectId = tts.id
          left join t_student_file tsf on tsf.username = tss.username
          where tsf.status = 0 and tts.username = #{username}
    </select>

    <update id="examineStudentUploadFile" parameterType="cn.duansanniu.entity.StudentUploadFile">
        update t_student_file  set status = 1 where id = #{id}

    </update>

    <update id="failExamineStudentUploadFile" parameterType="cn.duansanniu.entity.StudentUploadFile">
        update t_student_file  set status = 2 where id = #{id}

    </update>

    <select id="getExamineFiles" parameterType="String" resultType="cn.duansanniu.entity.StudentUploadFile">
        select tsf.* from t_teacher_subject tts
          left join t_student_subject tss on tss.subjectId = tts.id
          left join t_student_file tsf on tsf.username = tss.username
          where tsf.status = 1 and tts.username = #{username}
    </select>

    <select id="getStudentExamineFileCount" parameterType="String" resultType="Integer">
        select ifnull(count(*),0) from t_student_file where username = #{username} and status = 1
    </select>

    <update id="updateStudentStage" parameterType="map">
        update t_student_subject set status = #{count}  where username = #{username}
    </update>

    <select id="isExitFile" parameterType="map" resultType="Integer">
        select ifnull(count(*),0) from t_teacher_file where subjectId = #{subjectId} and
          username = #{username} and subjectId = #{subjectId}
    </select>

    <insert id="storeFile" parameterType="map" useGeneratedKeys="true" keyProperty="id">
        insert into t_teacher_file (username,name,url,createTime,studentusername,fileType) values (
          #{username},#{name},#{url},#{createTime},#{studentusername},#{fileType}
        )
    </insert>

    <!--<update id="updateFile" parameterType="map">-->
        <!--update t_teacher_file-->
        <!--<set>-->
            <!--<if test="url!= null and url != ''">-->
                 <!--url = #{url},-->
            <!--</if>-->
            <!--<if test="createTime!=null and createTime!=''">-->
                 <!--createTime = #{createTime}-->
            <!--</if>-->
        <!--</set>-->
        <!--where username = #{username } and name = #{name} and fileType = #{fileType}-->
    <!--</update>-->
    
    <select id="getFileId" parameterType="map" resultType="Integer">
        select id from t_teacher_file where username = #{username} and name = #{name} and fileType=#{fileType}
          and url = #{url} and createTime = #{createTime}
    </select>
    
    
    <insert id="uploadApplyTable" parameterType="cn.duansanniu.entity.ApplyTable" keyProperty="id" useGeneratedKeys="true" >
        insert into t_teacher_subject values(null,#{username},#{title},#{detail},#{status},#{type},#{fileId},#{origin},#{address},#{taskId})
    </insert>

    <resultMap id="StudentList" type="cn.duansanniu.entity.StudentList">
        <result column="username" property="username" />
        <result column="name" property="name"/>
        <result column="profession" property="profession"/>
        <result column="className" property="className"/>
        <result column="title" property="title"/>
        <result column="detail" property="detail"/>
        <result column="status" property="status"/>
    </resultMap>

    <select id="getStudentList" parameterType="String" resultMap="StudentList">


        select ts.username,ts.name,tts.title,tts.detail,tss.status,tp.name profession,tc.name className from t_student ts
          left join t_student_subject tss on tss.username = ts.username
          left join t_teacher_subject tts on tts.id = tss.subjectId
          left join t_class tc on tc.id = ts.classid
          left join t_profession tp on tp.id = tc.professionid
          where tts.username = #{username}



    </select>

    <resultMap id="Subject" type="cn.duansanniu.entity.Subjects">
        <id column="s_id" property="id"/>
        <result column="s_title" property="title"/>
        <result column="s_detail" property="detail"/>
        <result column="s_type" property="type"/>
        <result column="s_origin" property="origin"/>
        <result column="s_address" property="address"/>
        <result column="s_status" property="status"/>
        <association property="teacherFile">
            <id column="t_id" property="id"/>
            <result column="t_name" property="name"/>
            <result column="t_url" property="url"/>
            <result column="t_createTime" property="createTime"/>
        </association>
    </resultMap>
    <select id="getTeacherSubjects" parameterType="String" resultMap="Subject">
        select tts.id s_id,tts.title s_title,tts.detail s_detail,tts.type s_type,tts.origin s_origin,tts.address s_address,tts.status s_status,
        ttf.id t_id,ttf.name t_name,ttf.url t_url,ttf.createTime t_createTime from t_teacher_subject tts
        left join t_teacher_file ttf on ttf.subjectId = tts.id
        where tts.username = #{username}
    </select>

    <select id="getPathUrlByFileId" parameterType="Integer" resultType="String">
        select ttf.url from t_teacher_file ttf

        where ttf.id = #{id}

    </select>

    <select id="getStudentFileInfo" parameterType="map" resultType="cn.duansanniu.entity.StudentUploadFile">
        select tsf.* from t_student_file tsf
        left join t_student_subject tss on tss.username = tsf.username
        left join t_teacher_subject tts on tts.id = tss.subjectId
        where tsf.type = #{type} and tts.username = #{username}
    </select>

    <update id="examineStudentFile" parameterType="map">
        update t_student_file set status = #{status} where id = #{id}
    </update>

    <select id="getStudentFilePathById" parameterType="Integer" resultType="String">
        select url from t_student_file where id = #{id}
    </select>

    <select id="getTeacherUploadFile" parameterType="map" resultType="cn.duansanniu.entity.TeacherUploadFile">
        select * from t_teacher_file where username = #{username} and fileType = #{type}
    </select>
    
    <update id="setStudentSubjectStatus" parameterType="Integer">
        update t_student_subject
          set status = status + 1
          where username = (
            select username from t_student_file where id = #{id}
          )
    </update>

    <update id="updateSubjectFile" parameterType="map">
        update t_teacher_file
        set subjectId = #{subjectId}
        where id = #{id}
    </update>

</mapper>

